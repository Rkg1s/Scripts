-- Place this script in a LocalScript inside the ScreenGui

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- GUI Elements
local screenGui = script.Parent
local toggleButton = screenGui:WaitForChild("ToggleButton")  -- Make sure your button is named ToggleButton
local buttonLabel = toggleButton:WaitForChild("TextLabel")

-- State and Loop
local isLooping = false
local loopRunning = false

-- Functions to handle loop behavior
local function pressKeys()
    if isLooping then
        -- Simulate Q key press
        local qKey = Instance.new("InputObject", game) -- Make sure this input is valid
        qKey.KeyCode = Enum.KeyCode.Q
        UserInputService.InputBegan:Fire(qKey, false)

        wait(0.2)  -- Adjust the delay between Q and E presses

        -- Simulate E key press
        local eKey = Instance.new("InputObject", game) -- Make sure this input is valid
        eKey.KeyCode = Enum.KeyCode.E
        UserInputService.InputBegan:Fire(eKey, false)

        wait(0.2)
    end
end

-- Toggle button click function
local function toggleLoop()
    isLooping = not isLooping
    loopRunning = true  -- Starts loop when toggled

    -- Change button color to indicate state
    local targetColor = isLooping and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    local tween = TweenService:Create(toggleButton, TweenInfo.new(0.5), {BackgroundColor3 = targetColor})
    tween:Play()

    -- Button label changes
    buttonLabel.Text = isLooping and "Looping: ON" or "Looping: OFF"
end

-- Loop handling
while true do
    if isLooping then
        pressKeys()  -- Call the function to press the keys

        -- Wait for a short period before repeating (controls frequency of key presses)
        wait(1)
    else
        -- Wait for toggle to turn on
        wait(0.1)
    end
end

-- Connect button click to toggle the loop
toggleButton.MouseButton1Click:Connect(toggleLoop)
