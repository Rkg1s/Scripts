-- GUI Setup
local BloxburgGUI = Instance.new("ScreenGui")
BloxburgGUI.Name = "BloxburgGUI"
BloxburgGUI.Parent = game.CoreGui
BloxburgGUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local Main = Instance.new("Frame")
Main.Name = "Main"
Main.Parent = BloxburgGUI
Main.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Main.Position = UDim2.new(0.802, 0, 0.269, 0)
Main.Size = UDim2.new(0, 182, 0, 201)

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0.1, 8)
UICorner.Parent = Main

local TextLabel = Instance.new("TextLabel")
TextLabel.Parent = Main
TextLabel.BackgroundTransparency = 1.000
TextLabel.Position = UDim2.new(0, 0, 0.02, 0)
TextLabel.Size = UDim2.new(0, 182, 0, 41)
TextLabel.Font = Enum.Font.Ubuntu
TextLabel.Text = "Bloxburg GUI"
TextLabel.TextColor3 = Color3.fromRGB(128, 255, 0)
TextLabel.TextSize = 18.000

local Main_2 = Instance.new("Frame")
Main_2.Name = "Main_2"
Main_2.Parent = Main
Main_2.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
Main_2.BackgroundTransparency = 0.990
Main_2.Position = UDim2.new(0, 0, 0.23, 0)
Main_2.Size = UDim2.new(0, 184, 0, 155)

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = Main_2
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Labels
local function createLabel(name, text, layoutOrder, color)
    local lbl = Instance.new("TextLabel")
    lbl.Name = name
    lbl.Parent = Main_2
    lbl.BackgroundTransparency = 1
    lbl.Size = UDim2.new(0, 184, 0, 35)
    lbl.Font = Enum.Font.Ubuntu
    lbl.Text = text
    lbl.TextColor3 = color or Color3.fromRGB(255, 255, 255)
    lbl.TextSize = 13
    lbl.LayoutOrder = layoutOrder
    return lbl
end

local CashierBloxyBurgersLabel = createLabel("CashierBloxyBurgers", "Bloxy Burgers Cashier (Q)", 1, Color3.fromRGB(255, 0, 0))
local HairdresserLabel = createLabel("Hairdresser", "Hairdresser (E)", 2, Color3.fromRGB(255, 0, 0))
local hideguilabel = createLabel("hideguilabel", "Hide Gui (RShift)", 3)
local killguilabel = createLabel("killguilabel", "KILL GUI AND SCRIPTS (P)", 100)

-- Dragging Logic
local UserInputService = game:GetService("UserInputService")
local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Main.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Main.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

Main.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

-- Game logic
local Colors = {Pink = -1,Green = -2,Blue = -3, Gray = 0,Blonde = 1,Brown = 2, Black = 3,Red = 4}
local Hairstyles = {Sideswept = -1,Curly = -2,Long = -3,Bun = -4,Afro = 0,Charming = 1,Combed = 2,Headband = 3,Pigtails = 4,Messy = 5}
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local HairdresserWorkstations = workspace.Environment.Locations.StylezHairStudio.HairdresserWorkstations
local CashierWorkstations = workspace.Environment.Locations.BloxyBurgers.CashierWorkstations
local CAS = game:GetService("ContextActionService")

local CashierBloxyToggle, CashierBloxyRun = false, false
local HairdresserToggle, HairdresserRun = false, false

local function SetLabelActive(label, bool)
    label.TextColor3 = bool and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
end

local function StopBloxyCashier()
    SetLabelActive(CashierBloxyBurgersLabel, false)
    CashierBloxyToggle, CashierBloxyRun = false, false
end

local function StopHairdresser()
    SetLabelActive(HairdresserLabel, false)
    HairdresserToggle, HairdresserRun = false, false
end

local function GetPlayerWorkstation(workstations)
    local closest, distance = nil, math.huge
    for _, part in ipairs(workstations:GetChildren()) do
        local dist = (part.PrimaryPart.Position - character.PrimaryPart.Position).Magnitude
        if dist < distance then
            closest = part
            distance = dist
        end
    end
    return closest
end

local function ClickButton(btn)
    if not btn then return end
    for _, signal in ipairs({"MouseButton1Up", "MouseButton1Down", "MouseButton1Click", "Activated"}) do
        for _, conn in ipairs(getconnections(btn[signal])) do
            conn:Fire()
        end
    end
end

local function CompleteBloxyCashierOrder()
    local ws = GetPlayerWorkstation(CashierWorkstations)
    if not ws then warn("[S] Cashier: No workstation") StopBloxyCashier() return false end
    local gui = ws.OrderDisplay.DisplayMain.CashierGUI.Frame
    local customer = ws.Occupied.Value
    if customer then
        local order = customer.Order
        if order.Burger.Value then ClickButton(gui:FindFirstChild(order.Burger.Value)) end
        if order.Fries.Value then ClickButton(gui.Fries) end
        if order.Cola.Value then ClickButton(gui.Cola) end
        wait(0.1)
        ClickButton(gui.Done)
        Instance.new("BoolValue", customer).Name = "Done"
        return true
    end
    return false
end

local function ToggleBloxyCashierAutoFarm()
    CashierBloxyToggle = not CashierBloxyToggle
    SetLabelActive(CashierBloxyBurgersLabel, CashierBloxyToggle)
    if CashierBloxyRun then return end
    CashierBloxyRun = true
    while CashierBloxyToggle do
        local ws = GetPlayerWorkstation(CashierWorkstations)
        if ws and ws.Occupied.Value and ws.Occupied.Value.Head:FindFirstChild("ChatBubble") and not ws.Occupied.Value:FindFirstChild("Done") then
            if not CompleteBloxyCashierOrder() then StopBloxyCashier() return end
        end
        wait()
    end
    StopBloxyCashier()
end

local function CompleteHairdresserOrder()
    local ws = GetPlayerWorkstation(HairdresserWorkstations)
    if not ws then warn("[S] Hairdresser: No workstation") StopHairdresser() return false end
    local customer = ws.Occupied.Value
    if customer then
        local order = customer.Order
        local Style, Color = Hairstyles[order.Style.Value], Colors[order.Color.Value]
        if Style == nil or Color == nil then return false end
        local gui = ws.Mirror.HairdresserGUI.Frame
        local StyleGUI, ColorGUI = gui.Style, gui.Color
        while Style < 0 do Style = Style + 1 ClickButton(StyleGUI.Back) wait(0.05) end
        while Style > 0 do Style = Style - 1 ClickButton(StyleGUI.Next) wait(0.05) end
        while Color < 0 do Color = Color + 1 ClickButton(ColorGUI.Back) wait(0.05) end
        while Color > 0 do Color = Color - 1 ClickButton(ColorGUI.Next) wait(0.05) end
        wait(0.1)
        ClickButton(gui.Done)
        Instance.new("BoolValue", customer).Name = "Done"
        return true
    end
    return false
end

local function ToggleHairdresserAutoFarm()
    HairdresserToggle = not HairdresserToggle
    SetLabelActive(HairdresserLabel, HairdresserToggle)
    if HairdresserRun then return end
    HairdresserRun = true
    while HairdresserToggle do
        local ws = GetPlayerWorkstation(HairdresserWorkstations)
        if ws and ws.Occupied.Value and ws.Occupied.Value.Head:FindFirstChild("ChatBubble") and not ws.Occupied.Value:FindFirstChild("Done") then
            if not CompleteHairdresserOrder() then StopHairdresser() return end
        end
        wait()
    end
    StopHairdresser()
end

-- Keybinds
CAS:BindAction("ToggleGUI", function(_, state) if state == Enum.UserInputState.End then BloxburgGUI.Enabled = not BloxburgGUI.Enabled end end, false, Enum.KeyCode.RightShift)
CAS:BindAction("ToggleCashier", function(_, state) if state == Enum.UserInputState.End then ToggleBloxyCashierAutoFarm() end end, false, Enum.KeyCode.Q)
CAS:BindAction("ToggleHairdresser", function(_, state) if state == Enum.UserInputState.End then ToggleHairdresserAutoFarm() end end, false, Enum.KeyCode.E)
CAS:BindAction("KillScript", function()
    BloxburgGUI:Destroy()
    CAS:UnbindAction("ToggleGUI")
    CAS:UnbindAction("ToggleCashier")
    CAS:UnbindAction("ToggleHairdresser")
    CAS:UnbindAction("KillScript")
    StopHairdresser()
    StopBloxyCashier()
end, false, Enum.KeyCode.P)
